<launch>
        <!-- Configuration -->
        <arg name="rviz" default="true"/>
        <arg name="debug" default="false"/>
        <arg if="$(arg debug)" name="launch-prefix" value="screen -d -m gdb -command=$(env HOME)/.ros/my_debug_log --ex run --args"/>
        <arg unless="$(arg debug)" name="launch-prefix" value=""/>

        <!-- Load robot_description to parameter server -->
        <param name="/robot_description" command="$(find xacro)/xacro '$(find ur_description)/urdf/ur5e.xacro'" />

        <!-- <include file="$(find ur5e_moveit_config)/launch/move_group.launch" /> -->

        <!-- Load controller and hardware configuration -->
        <rosparam file="$(find iaps_ur5e_sim)/config/my_ur5e_controllers.yaml" command="load"></rosparam>

        <!-- Load hardware interface -->
        <node name="sim_hardware_interface" pkg="ros_control_boilerplate" type="sim_hw_main" output="screen" launch-prefix="$(arg launch-prefix)">

                <!-- Control motion and compliance controller with one handle -->
                <!-- <remap from="my_motion_control_handle/target_frame" to="target_frame" />
                <remap from="my_cartesian_motion_controller/target_frame" to="target_frame" /> -->
                <!-- <remap from="my_cartesian_compliance_controller/target_frame" to="target_frame" /> -->

                <!-- Control wrenches via one topic -->
<!--            <remap from="my_cartesian_force_controller/target_wrench" to="target_wrench" />
                <remap from="my_cartesian_compliance_controller/target_wrench" to="target_wrench" /> -->
        </node>
        

        <!-- Robot state publisher -->
        <node 
                name="robot_state_publisher"
                pkg="robot_state_publisher" 
                type="robot_state_publisher" >
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" type="string" value="" />
        </node>

        <!-- Joint state publisher -->
        <node 
                name="joint_state_controller_spawner" 
                pkg="controller_manager" 
                type="spawner" 
                args="joint_state_controller" 
                respawn="false" 
                output="screen"
        /> 

        <!-- Spawn stopped controllers -->
<!--         <node 
                name="controller_spawner_stopped" 
                pkg="controller_manager"  
                type="spawner"
                args=" 
                stopped 
                my_motion_control_handle
                my_cartesian_motion_controller
                pose_based_cartesian_traj_controller
                joint_based_cartesian_traj_controller
                "
        /> -->

        <!-- Spawn initial controller -->
        <node 
                name="controller_spawner_initial" 
                pkg="controller_manager" 
                type="spawner"
                args="
                joint_based_cartesian_traj_controller
                "
        />

        <!-- Visualization -->
        <group if="$(arg rviz)">
                <arg name="my_rviz" value="-d $(find iaps_ur5e_sim)/etc/my_examples.rviz" />
                <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="$(arg my_rviz)" output="screen" />
        </group>
<!--         <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen" args="-d $(find ur_robot_driver)/resources/example_rviz_config.rviz"/> -->
</launch>
